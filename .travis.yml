language: cpp
os:
    - linux
    - osx

# Regrettably, `dist` is a string enum,
# and does not accept a list.
#
# Thus, when updating be sure to add sections
# to jobs.include to cover the old distro
dist: focal # (20.04 LTS)

osx_image:
    - xcode9.4
    - xcode11.3

compiler:
    - gcc
    - clang

env:
    - {}
    - FLAGS="-DBoost_NO_BOOST_CMAKE=ON"
    - FLAGS="-DUSE_PYTHON_3=ON"

jobs:
    include:
        # Ubuntu Bionic (18.04 LTS)
        # Note: The first entry in the `os`, `compiler`, and `env`
        #       lists above become the defaults below, so we only
        #       have to set them where they differ
        - dist: bionic
        - dist: bionic
          compiler: clang
        - dist: bionic
          env: FLAGS="-DUSE_PYTHON_3=ON"
        - dist: bionic
          compiler: clang
          env: FLAGS="-DUSE_PYTHON_3=ON"

        # Ubuntu Xenial (16.04 LTS)
        - dist: xenial
        - dist: xenial
          compiler: clang
        - dist: xenial
          env: FLAGS="-DUSE_PYTHON_3=ON"
        - dist: xenial
          compiler: clang
          env: FLAGS="-DUSE_PYTHON_3=ON"

    exclude:
        # osx requires the Boost_NO_BOOST_CMAKE flag for python2
        # but we don't need that for linux
        - os: osx
          env: []
        - os: linux
          env: FLAGS="-DBoost_NO_BOOST_CMAKE=ON"

        # focal's libboost-python-dev doesn't support python2
        - os: linux
          dist: focal
          env: []

        # XCode9.4 has problems with python3
        - os: osx
          osx_image: xcode9.4
          env: FLAGS="-DUSE_PYTHON_3=ON"

    allow_failures:
        - os: osx
        - env: FLAGS="-DUSE_PYTHON_3=ON"

    fast_finish: true

addons:
  apt:
    packages:
      - libgl1-mesa-glx
      - freeglut3-dev
      - libopenal-dev
      - libsdl-gfx1.2-dev
      - libvorbis-dev
      - libjpeg-dev
      - libpng-dev
      - libgtk-3-dev
      - libboost-python-dev # pulls python-dev
      - libboost-log-dev
  homebrew:
     update: true
     packages:
      - mesa
      - openal-soft
      - sdl
      - libvorbis
      - jpeg
      - libpng
      - gtk+3
      - gtkglext
      - boost-python
      - boost-python3

script:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then FLAGS="$FLAGS -DCMAKE_FIND_FRAMEWORK=LAST"; fi
  - ./sh/vsbuild.sh $FLAGS

# CI/CD hookups
# See https://docs.travis-ci.com/user/deployment/releases/
# for what to do for `before_deploy` and `deploy` sections
#before_deploy:
#  - pull the submodule here
#  - ./sh/vspackage.sh
#  - export TRAVIS_TAG="composite tag name here"
#  - git tag ${TRAVIS_TAG}
#deploy:
#    # GitHub Releases
#    provider: releases
#    api_key:
#        secure: "Encrypted GitHub Auth Key" <-- put this in the secrets
#    file:
#       # Upload files in the `packages` directory
#       - packages/*
#    # Ensure the build doesn't get cleaned up so the files are avialable
#    # for the release build
#    skip_clean: true
#    # release is a draft so it can be edited, updated, etc.
#    draft: true
#    # GitHub Releases requires a tag; this guarnatees a tag is set
#    on:
#        tags: true

notifications:
  webhooks:
    if: repo = vegastrike/Vega-Strike-Engine-Source
    urls:
      - https://webhooks.gitter.im/e/1361517953461007f39a  # community room
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
